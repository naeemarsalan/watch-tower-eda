- name: Check Postgre SQL Trigger
  hosts: all
  gather_facts: false
  tasks:
    - name: Check for trigger in pg_trigger
      become: false
      shell: |
        PGPASSWORD="redhat123" psql -h {{db_host}} -U {{db_username}} -d {{db_name}} -p {{ db_port }} -tAc "
        SELECT EXISTS (
            SELECT 1
            FROM information_schema.triggers
            WHERE event_object_schema = 'queue'
              AND event_object_table = 'message'
              AND trigger_name = 'new_insert_trigger'
        );
        "
      register: trigger_check

    - name: Do something if trigger exists
      debug:
        msg: "✅ Trigger 'new_message_notify()' exists."
      when: trigger_check.stdout.strip() == 't'
    
    - name: End play if trigger already exists
      meta: end_play
      when: trigger_check.stdout.strip() == 't'

    - name: Copy SQL file to remote host
      copy:
        src: ../files/queue.sql
        dest: /tmp/create_trigger.sql
      when: trigger_check.stdout.strip() == 'f'

    - name: Create trigger if it does not exist
      shell: |
        PGPASSWORD="redhat123" psql -h {{db_host}} -U {{db_username}} -d {{db_name}} -p {{ db_port }} -f /tmp/create_trigger.sql
      when: trigger_check.stdout.strip() == 'f'

    - name: Re-check for trigger after attempting creation
      shell: |
        PGPASSWORD="redhat123" psql -h {{db_host}} -U {{db_username}} -d {{db_name}} -p {{ db_port }} -tAc "
        SELECT EXISTS (
            SELECT 1
            FROM information_schema.triggers
            WHERE event_object_schema = 'queue'
              AND event_object_table = 'message'
              AND trigger_name = 'new_insert_trigger'
        );
        "
      register: trigger_check_post

    - name: Fail if trigger is still missing
      fail:
        msg: "❌ Trigger 'new_message_notify()' is still missing after creation attempt!"
      when: trigger_check_post.stdout.strip() != 't'